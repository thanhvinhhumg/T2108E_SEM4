
package example.com.spring.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerWebService", targetNamespace = "http://com.example/spring/soap")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerWebService {


    /**
     * 
     * @param address
     * @param name
     * @param age
     * @return
     *     returns example.com.spring.soap.ResponseObject
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCustomer", targetNamespace = "http://com.example/spring/soap", className = "example.com.spring.soap.AddCustomer")
    @ResponseWrapper(localName = "addCustomerResponse", targetNamespace = "http://com.example/spring/soap", className = "example.com.spring.soap.AddCustomerResponse")
    @Action(input = "http://com.example/spring/soap/CustomerWebService/addCustomerRequest", output = "http://com.example/spring/soap/CustomerWebService/addCustomerResponse")
    public ResponseObject addCustomer(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "age", targetNamespace = "")
        Integer age,
        @WebParam(name = "address", targetNamespace = "")
        String address);

}
